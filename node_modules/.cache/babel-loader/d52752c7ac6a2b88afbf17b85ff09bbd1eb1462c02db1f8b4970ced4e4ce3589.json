{"ast":null,"code":"var _jsxFileName = \"/home/mohammed/Videos/react2/React-Challenge/src/components/CandidateRegistration.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// Base styles for the component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst alertMessage = {\n  marginTop: '5px'\n};\nconst highlight = {\n  border: '2px solid red',\n  backgroundColor: 'red'\n};\nconst centerContainerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  height: '50vh',\n  textAlign: 'center'\n};\nconst addSkillButtonStyle = {\n  backgroundColor: '#525252',\n  border: '1px solid #333',\n  color: 'white',\n  borderRadius: '5px',\n  marginLeft: '10px',\n  cursor: 'pointer'\n};\nconst formBoxStyle = {\n  border: '1px solid #ccc',\n  padding: '20px',\n  backgroundColor: '#f5f5f5'\n};\nconst formGroupStyle = {\n  marginBottom: '10px',\n  display: 'flex',\n  alignItems: 'center'\n};\nconst sharpEdgeButtonStyle = {\n  backgroundColor: '#525252',\n  border: '1px solid #333',\n  padding: '10px 20px',\n  color: 'white',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  marginTop: '10px'\n};\nconst inputStyle = {\n  width: '100%',\n  padding: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ccc',\n  boxSizing: 'border-box'\n};\nconst skillTagStyle = {\n  backgroundColor: '#333',\n  color: 'white',\n  borderRadius: '5px',\n  padding: '5px 10px',\n  margin: '0 5px'\n};\nconst buttonGroupStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginTop: '10px'\n};\nfunction CandidateRegistration() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    role: '',\n    skill: '',\n    skills: []\n  });\n  const [registrationStatus, setRegistrationStatus] = useState(null);\n  const [candidates, setCandidates] = useState([]);\n  const [highlightInput, setHighlightInput] = useState(false);\n\n  // Regular expressions for validation\n  const nameRegex = /^[a-zA-Z0-9\\s]+$/;\n  const roleRegex = /^[a-zA-Z0-9\\s]+$/;\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const handleSkillChange = e => {\n    setFormData({\n      ...formData,\n      skill: e.target.value\n    });\n  };\n  const handleAddSkill = () => {\n    if (formData.skills.length < 5 && formData.skill.trim() !== '') {\n      setFormData({\n        ...formData,\n        skills: [...formData.skills, formData.skill.trim()],\n        skill: ''\n      });\n    }\n  };\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    // Validation: Ensure name, email, and role are not empty\n    if (formData.name.trim() === '' || formData.email.trim() === '' || formData.role.trim() === '' || formData.skills.length === 0) {\n      setHighlightInput(true);\n      setRegistrationStatus('All fields are required.');\n      return;\n    }\n\n    // Validation: Ensure a maximum of 5 skills\n    if (formData.skills.length > 5) {\n      setHighlightInput(true);\n      setRegistrationStatus('You can add only a maximum of 5 skills.');\n      return;\n    }\n\n    // Validation: Ensure name is a valid string\n    if (!nameRegex.test(formData.name.trim())) {\n      setHighlightInput(true);\n      setRegistrationStatus('Invalid name format.');\n      return;\n    }\n\n    // Validation: Ensure role is a valid string\n    if (!roleRegex.test(formData.role.trim())) {\n      setHighlightInput(true);\n      setRegistrationStatus('Invalid role format.');\n      return;\n    }\n\n    // Validation: Ensure a valid email address\n    if (!emailRegex.test(formData.email.trim())) {\n      setHighlightInput(true);\n      setRegistrationStatus('Invalid email address.');\n      return;\n    }\n\n    // Check if the email already exists\n    if (candidates.some(candidate => candidate.email === formData.email.trim())) {\n      setHighlightInput(true);\n      setRegistrationStatus('Email already exists.');\n      return;\n    }\n\n    // Add the candidate to the list\n    setCandidates([...candidates, formData]);\n\n    // Reset form data and highlight\n    setFormData({\n      name: '',\n      email: '',\n      role: '',\n      skill: '',\n      skills: []\n    });\n    setHighlightInput(false);\n\n    // Set registration status\n    setRegistrationStatus('Candidate profile created.');\n  };\n\n  // ... (existing useEffect hooks)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: centerContainerStyle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: formBoxStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-testid\": \"registration-component\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleFormSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), registrationStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: alertMessage,\n          children: registrationStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(CandidateRegistration, \"OgKfZWmuGruQUXcXUaHKnoXCfE0=\");\n_c = CandidateRegistration;\nexport default CandidateRegistration;\nvar _c;\n$RefreshReg$(_c, \"CandidateRegistration\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","alertMessage","marginTop","highlight","border","backgroundColor","centerContainerStyle","display","flexDirection","alignItems","justifyContent","height","textAlign","addSkillButtonStyle","color","borderRadius","marginLeft","cursor","formBoxStyle","padding","formGroupStyle","marginBottom","sharpEdgeButtonStyle","inputStyle","width","boxSizing","skillTagStyle","margin","buttonGroupStyle","CandidateRegistration","_s","formData","setFormData","name","email","role","skill","skills","registrationStatus","setRegistrationStatus","candidates","setCandidates","highlightInput","setHighlightInput","nameRegex","roleRegex","emailRegex","handleSkillChange","e","target","value","handleAddSkill","length","trim","handleFormSubmit","preventDefault","test","some","candidate","style","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mohammed/Videos/react2/React-Challenge/src/components/CandidateRegistration.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n// Base styles for the component\nconst alertMessage = {\n  marginTop: '5px',\n};\n\nconst highlight = {\n  border: '2px solid red',\n  backgroundColor: 'red',\n};\n\nconst centerContainerStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  height: '50vh',\n  textAlign: 'center',\n};\n\nconst addSkillButtonStyle = {\n  backgroundColor: '#525252',\n  border: '1px solid #333',\n  color: 'white',\n  borderRadius: '5px',\n  marginLeft: '10px',\n  cursor: 'pointer',\n};\n\nconst formBoxStyle = {\n  border: '1px solid #ccc',\n  padding: '20px',\n  backgroundColor: '#f5f5f5',\n};\n\nconst formGroupStyle = {\n  marginBottom: '10px',\n  display: 'flex',\n  alignItems: 'center',\n};\n\nconst sharpEdgeButtonStyle = {\n  backgroundColor: '#525252',\n  border: '1px solid #333',\n  padding: '10px 20px',\n  color: 'white',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  marginTop: '10px',\n};\n\nconst inputStyle = {\n  width: '100%',\n  padding: '10px',\n  borderRadius: '5px',\n  border: '1px solid #ccc',\n  boxSizing: 'border-box',\n};\n\nconst skillTagStyle = {\n  backgroundColor: '#333',\n  color: 'white',\n  borderRadius: '5px',\n  padding: '5px 10px',\n  margin: '0 5px',\n};\n\nconst buttonGroupStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginTop: '10px',\n};\n\nfunction CandidateRegistration() {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    role: '',\n    skill: '',\n    skills: [],\n  });\n\n  const [registrationStatus, setRegistrationStatus] = useState(null);\n  const [candidates, setCandidates] = useState([]);\n  const [highlightInput, setHighlightInput] = useState(false);\n\n  // Regular expressions for validation\n  const nameRegex = /^[a-zA-Z0-9\\s]+$/;\n  const roleRegex = /^[a-zA-Z0-9\\s]+$/;\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n  const handleSkillChange = (e) => {\n    setFormData({ ...formData, skill: e.target.value });\n  };\n\n  const handleAddSkill = () => {\n    if (formData.skills.length < 5 && formData.skill.trim() !== '') {\n      setFormData({\n        ...formData,\n        skills: [...formData.skills, formData.skill.trim()],\n        skill: '',\n      });\n    }\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    // Validation: Ensure name, email, and role are not empty\n    if (\n      formData.name.trim() === '' ||\n      formData.email.trim() === '' ||\n      formData.role.trim() === '' ||\n      formData.skills.length === 0\n    ) {\n      setHighlightInput(true);\n      setRegistrationStatus('All fields are required.');\n      return;\n    }\n\n    // Validation: Ensure a maximum of 5 skills\n    if (formData.skills.length > 5) {\n      setHighlightInput(true);\n      setRegistrationStatus('You can add only a maximum of 5 skills.');\n      return;\n    }\n\n    // Validation: Ensure name is a valid string\n    if (!nameRegex.test(formData.name.trim())) {\n      setHighlightInput(true);\n      setRegistrationStatus('Invalid name format.');\n      return;\n    }\n\n    // Validation: Ensure role is a valid string\n    if (!roleRegex.test(formData.role.trim())) {\n      setHighlightInput(true);\n      setRegistrationStatus('Invalid role format.');\n      return;\n    }\n\n    // Validation: Ensure a valid email address\n    if (!emailRegex.test(formData.email.trim())) {\n      setHighlightInput(true);\n      setRegistrationStatus('Invalid email address.');\n      return;\n    }\n\n    // Check if the email already exists\n    if (candidates.some((candidate) => candidate.email === formData.email.trim())) {\n      setHighlightInput(true);\n      setRegistrationStatus('Email already exists.');\n      return;\n    }\n\n    // Add the candidate to the list\n    setCandidates([...candidates, formData]);\n\n    // Reset form data and highlight\n    setFormData({\n      name: '',\n      email: '',\n      role: '',\n      skill: '',\n      skills: [],\n    });\n    setHighlightInput(false);\n\n    // Set registration status\n    setRegistrationStatus('Candidate profile created.');\n  };\n\n  // ... (existing useEffect hooks)\n\n  return (\n    <div style={centerContainerStyle}>\n      <div style={formBoxStyle}>\n        <div data-testid=\"registration-component\">\n          <form onSubmit={handleFormSubmit}>\n            {/* ... (existing form elements) */}\n          </form>\n          {registrationStatus && <p style={alertMessage}>{registrationStatus}</p>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CandidateRegistration;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}